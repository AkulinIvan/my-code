def gen_bin(M, prefix=''):
    if M == 0:
        print(prefix)
        return    
    gen_bin(M-1, prefix+'0')
    gen_bin(M-1, prefix+'1')
def generate_numbers(N:int, M: int, prefix = None):
    if M == 0: 
        print(prefix)
        return
    prefix = prefix or []
    for digit in range(N):
        prefix.append(digit)
        generate_numbers(N, M-1, prefix)
        prefix.pop()
#generate_numbers(3, 3)
#gen_bin(5)

def find(number, A):
    '''Ищет number в A и возвращает True, если такой есть. False,  если такого нет'''
    flag = False
    for x in A:
        if number == x:
            flag = True
            break
    return flag

def gen_permutations(N:int, M:int=-1, prefix=None): 
    '''Генерация всех перестановок N чисел в M позициях,
        с префиксом prefix'''
    M=N if M==-1 else M        #по умолчанию N чисел в M позициях
    prefix = prefix or []
    if M==0:
        print(*prefix, end= ', ')
        return
    for number in range(1, N+1):
        if find(number, prefix): 
            continue
        prefix.append(number)
        gen_permutations(N, M-1, prefix)
        prefix.pop()


gen_permutations(3)
